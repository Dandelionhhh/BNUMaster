<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--    <settings>-->
    <!--        <setting name="cacheEnable" value="false"/>-->
    <!--        <setting name="lazyLoadingEnabled" value="false"/>-->
    <!--    </settings>-->

    <!-- 设置单个/多个别名-->
    <properties resource="application.properties"/>

    <settings>
        <!--开启日志，并指定使用的具体日志-->
        <setting name="logImpl" value="LOG4J"/>

        <!--开启延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>

        <!--关闭立即加载-->
        <setting name="aggressiveLazyLoading" value="false"/>

        <!--开启二级缓存-->
        <setting name="cacheEnabled" value="true"/>

    </settings>

    <typeAliases>
        <!--        设置单个别名（别名 忽略大小写）-->
        <!--<typeAlias type="org.dandan.entity.Student" alias="student"/>-->


        <!--        批量定义别名（别名 忽略大小写）,以下会自动将该包中的所有类批量定义别名：别名就是类名（不带报名，忽略大小写）-->
        <package name="org.bnumaster.entity"/>
    </typeAliases>

    <typeHandlers>
        <typeHandler handler="org.bnumaster.converter.BooleanAndIntConverter" javaType="Boolean" jdbcType="INTEGER"/>
    </typeHandlers>
    <!-- 通过environments的default值和environment的id来指定MyBatis运行时的数据库环境-->
    <environments default="development">
        <!--开发环境（自己的电脑）-->
        <environment id="development">

            <!--事务提交方式
                JDBC:利用JDBC方式处理事务(commit  rollback  close)
                MANAGED:将事务交由其他组件去托管（spring,jobss）,默认情况下会关闭连接
                <transactionManager type="MANAGED"/>
                    <property name="closeConnection" value="false"/>
            -->
            <transactionManager type="JDBC"/>
            <!--数据源类型:
                UNPOOLED:传统JDBC模式（每次访问数据库，均需要打开、关闭数据库操作，但是打开、关闭数据库是比较消耗性能的）
                POOLED:使用数据库连接池
                JNDI:从tomcat中获取一个内置的数据库连接池（数据库连接池-数据源）
                -->
            <dataSource type="POOLED">
                <!--配置数据库信息-->
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>

        <!--真正的项目应该在发布的那台计算机上运行-->
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!--配置数据库信息-->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ras"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

        <!--测试人员的计算机-->
        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!--配置数据库信息-->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ras"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

    </environments>
    <mappers>
        <mapper resource="org/bnumaster/mapper/accountMapper.xml"/>
        <mapper resource="org/bnumaster/mapper/courseMapper.xml"/>
    </mappers>
</configuration>